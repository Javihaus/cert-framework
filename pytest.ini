[pytest]
# Pytest configuration for CERT Framework v4.0

# Test paths
testpaths = tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Register custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests requiring multiple components
    property: marks tests as property-based tests using hypothesis
    validation: marks tests against ground truth datasets (STS-Benchmark, etc.)
    requires_evaluation: marks tests that require [evaluation] extras installed
    requires_cli: marks tests that require [cli] extras installed

# Show warnings (but ignore deprecation warnings from our own code)
filterwarnings =
    error
    ignore::DeprecationWarning:cert
    ignore::pytest.PytestUnknownMarkWarning

# Asyncio configuration (pytest-asyncio)
asyncio_default_fixture_loop_scope = function

# Default options
addopts =
    --strict-markers
    -v
    --tb=short
    --cov=cert
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=85

# Coverage configuration
[coverage:run]
source = cert
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
