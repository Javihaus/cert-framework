[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "cert-framework"
version = "4.0.0"
description = "LLM monitoring with EU AI Act Article 15 compliance automation"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Javier Marin", email = "info@cert-framework.com"}
]
keywords = ["llm", "monitoring", "compliance", "eu-ai-act", "rag", "hallucination-detection", "observability"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
# Core has ZERO external dependencies - just standard library
dependencies = []

[project.optional-dependencies]
# Evaluation features - ML models for accuracy measurement
evaluation = [
    "sentence-transformers>=2.2.0,<3.0.0",
    "torch>=1.11.0",
    "transformers>=4.30.0",
    "tiktoken>=0.5.0",
    "protobuf>=3.20.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
]
# LLM Provider integrations
anthropic = ["anthropic>=0.18.0"]
openai = ["openai>=1.0.0"]
google = ["google-generativeai>=0.3.0"]
# Framework integrations
langchain = [
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
]
autogen = ["pyautogen>=0.2.0"]
crewai = ["crewai>=0.1.0"]
# Compliance reporting
compliance = [
    "jinja2>=3.0.0",
    "markdown>=3.3.0",
]
# Observability exports
observability = ["prometheus-client>=0.19.0"]
# Trajectory monitoring (experimental)
trajectory = ["matplotlib>=3.5.0"]
# CLI tool
cli = ["click>=8.0.0"]
# Development tools
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "hypothesis>=6.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "datasets>=2.0.0",
    "pandas>=1.3.0",
    "rapidfuzz>=3.0.0",
]
# Inspector UI
inspector = [
    "flask>=2.0.0",
    "jinja2>=3.0.0",
]
# Jupyter notebook support
notebook = [
    "ipython>=7.0.0",
    "ipywidgets>=8.0.0",
]
# All features
all = [
    "sentence-transformers>=2.2.0,<3.0.0",
    "torch>=1.11.0",
    "transformers>=4.30.0",
    "tiktoken>=0.5.0",
    "protobuf>=3.20.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "anthropic>=0.18.0",
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "pyautogen>=0.2.0",
    "crewai>=0.1.0",
    "jinja2>=3.0.0",
    "markdown>=3.3.0",
    "prometheus-client>=0.19.0",
    "matplotlib>=3.5.0",
    "click>=8.0.0",
    "flask>=2.0.0",
    "ipython>=7.0.0",
    "ipywidgets>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/Javihaus/cert-framework"
"Bug Tracker" = "https://github.com/Javihaus/cert-framework/issues"
Documentation = "https://github.com/Javihaus/cert-framework#readme"
"Source Code" = "https://github.com/Javihaus/cert-framework"

[project.scripts]
cert = "cert.cli.main:main"

[tool.setuptools]
packages = ["cert"]

[tool.setuptools.package-data]
cert = ["templates/*.html", "static/*"]

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise without from inside except (we include error in message)
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
